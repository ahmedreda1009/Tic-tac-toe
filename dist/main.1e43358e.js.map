{"version":3,"sources":["src/main.js"],"names":["playerXMoves","playerOMoves","history","currentPlayer","movesCounter","winner","winCases","squares","document","querySelectorAll","movesDivs","winnerPlyer","querySelector","nextPlayerField","moves","isPlayerWon","arr","winArra","result","some","element","res","every","ele","includes","forEach","dataset","id","classList","add","textContent","CheckWinner","clickedSquare","push","hisObj","x","o","next","winnerP","moveBlock","createElement","moveText","createTextNode","addEventListener","e","displayHistory","target","append","historyObj","getElementById","remove","innerHTML"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["let playerXMoves = [];\r\nlet playerOMoves = [];\r\nlet history = [];\r\nlet currentPlayer = 'X';\r\nlet movesCounter = 0;\r\nlet winner = false;\r\n\r\nlet winCases = [\r\n    [1, 2, 3],\r\n    [4, 5, 6],\r\n    [7, 8, 9],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [3, 6, 9],\r\n    [1, 5, 9],\r\n    [3, 5, 7]\r\n];\r\n\r\n\r\nlet squares = document.querySelectorAll('.board .square');\r\nlet movesDivs = document.querySelectorAll('.moves .moves-block button');\r\nlet winnerPlyer = document.querySelector('.info .winner span');\r\nlet nextPlayerField = document.querySelector('.info .next-player span');\r\nlet moves = document.querySelector('.moves .moves-block');\r\n\r\n\r\n\r\nfunction isPlayerWon(arr) {\r\n    let winArra = [];\r\n\r\n    let result = winCases.some((element) => {\r\n        let res = element.every((ele) => {\r\n            return arr.includes(ele);\r\n        });\r\n        winArra = element;\r\n        return res;\r\n    });\r\n\r\n    if (result) {\r\n        squares.forEach((ele) => {\r\n            if (winArra.includes(+ele.dataset.id)) {\r\n                ele.classList.add('text-warning');\r\n            }\r\n        });\r\n        nextPlayerField.textContent = '...';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction CheckWinner(clickedSquare) {\r\n    if (clickedSquare.textContent || winner) return;\r\n    clickedSquare.textContent = currentPlayer;\r\n\r\n    if (currentPlayer === 'X') {\r\n        playerXMoves.push(+clickedSquare.dataset.id);\r\n        // currentPlayer = 'O';\r\n        winner = isPlayerWon(playerXMoves);\r\n\r\n        if (winner) {\r\n            winnerPlyer.textContent = 'X';\r\n        } else {\r\n            currentPlayer = 'O';\r\n            nextPlayerField.textContent = currentPlayer;\r\n        }\r\n    } else {\r\n        playerOMoves.push(+clickedSquare.dataset.id);\r\n        // currentPlayer = 'X';\r\n        winner = isPlayerWon(playerOMoves);\r\n\r\n        if (winner) {\r\n            winnerPlyer.textContent = 'O';\r\n        } else {\r\n            currentPlayer = 'X';\r\n            nextPlayerField.textContent = currentPlayer;\r\n        }\r\n    }\r\n\r\n    let hisObj = {\r\n        x: [...playerXMoves],\r\n        o: [...playerOMoves],\r\n        next: nextPlayerField.textContent,\r\n        winnerP: winnerPlyer.textContent\r\n    };\r\n\r\n    history.push(hisObj);\r\n\r\n    let moveBlock = document.createElement('button');\r\n    let moveText = document.createTextNode(`Go to move #${movesCounter + 1}`)\r\n    moveBlock.classList = 'btn btn-primary d-block mb-2';\r\n    moveBlock.dataset.id = movesCounter + 1;\r\n\r\n    moveBlock.addEventListener('click', (e) => {\r\n        displayHistory(history[e.target.dataset.id - 1]);\r\n    });\r\n\r\n    moveBlock.append(moveText);\r\n    moves.append(moveBlock);\r\n\r\n    moves.append(moveBlock);\r\n\r\n    movesCounter++;\r\n}\r\n\r\nfunction displayHistory(historyObj) {\r\n    nextPlayerField.textContent = historyObj.next;\r\n    winnerPlyer.textContent = historyObj.winnerP;\r\n    squares.forEach(ele => {\r\n        if (historyObj.x.includes(+ele.dataset.id)) {\r\n            ele.textContent = 'X';\r\n        } else if (historyObj.o.includes(+ele.dataset.id)) {\r\n            ele.textContent = 'O';\r\n        } else {\r\n            ele.textContent = '';\r\n        }\r\n    });\r\n}\r\n\r\nsquares.forEach(ele => {\r\n    ele.addEventListener('click', () => {\r\n        CheckWinner(ele);\r\n    });\r\n});\r\n\r\ndocument.getElementById('play-again').addEventListener('click', () => {\r\n    playerXMoves = [];\r\n    playerOMoves = [];\r\n    history = [];\r\n    currentPlayer = 'X';\r\n    movesCounter = 0;\r\n    winner = false;\r\n    squares.forEach(ele => {\r\n        ele.textContent = '';\r\n        ele.classList.remove('text-warning');\r\n    });\r\n    moves.innerHTML = '';\r\n    nextPlayerField.textContent = currentPlayer;\r\n    winnerPlyer.textContent = '...';\r\n});"]}