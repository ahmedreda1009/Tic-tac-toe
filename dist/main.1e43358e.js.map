{"version":3,"sources":["src/main.js"],"names":["playerXMoves","playerOMoves","history","currentPlayer","movesCounter","winner","winCases","squares","document","querySelectorAll","movesDivs","winnerPlyer","querySelector","nextPlayerField","moves","isPlayerWon","arr","winArra","result","some","element","res","every","ele","includes","forEach","dataset","id","classList","add","textContent","CheckWinner","clickedSquare","push","hisObj","x","o","next","winnerP","moveBlock","createElement","moveText","createTextNode","addEventListener","e","displayHistory","target","append","historyObj","getElementById","remove","innerHTML"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["let playerXMoves = [];\r\nlet playerOMoves = [];\r\nlet history = [];\r\nlet currentPlayer = 'X';\r\nlet movesCounter = 0;\r\nlet winner = false;\r\n\r\nlet winCases = [\r\n    [1, 2, 3],\r\n    [4, 5, 6],\r\n    [7, 8, 9],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [3, 6, 9],\r\n    [1, 5, 9],\r\n    [3, 5, 7]\r\n];\r\n\r\n\r\nlet squares = document.querySelectorAll('.board .square');\r\nlet movesDivs = document.querySelectorAll('.moves .moves-block button');\r\nlet winnerPlyer = document.querySelector('.info .winner span');\r\nlet nextPlayerField = document.querySelector('.info .next-player span');\r\nlet moves = document.querySelector('.moves .moves-block');\r\n\r\n\r\n\r\nfunction isPlayerWon(arr) {\r\n    let winArra = [];\r\n\r\n    let result = winCases.some((element) => {\r\n        let res = element.every((ele) => {\r\n            return arr.includes(ele);\r\n        });\r\n        winArra = element;\r\n        return res;\r\n    });\r\n\r\n    if (result) {\r\n        squares.forEach((ele) => {\r\n            if (winArra.includes(+ele.dataset.id)) {\r\n                ele.classList.add('text-warning');\r\n            }\r\n        });\r\n        nextPlayerField.textContent = '...';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction CheckWinner(clickedSquare) {\r\n    if (clickedSquare.textContent || winner) return;\r\n    clickedSquare.textContent = currentPlayer;\r\n\r\n    if (currentPlayer === 'X') {\r\n        playerXMoves.push(+clickedSquare.dataset.id);\r\n        // currentPlayer = 'O';\r\n        winner = isPlayerWon(playerXMoves);\r\n\r\n        if (winner) {\r\n            winnerPlyer.textContent = 'X';\r\n        } else {\r\n            currentPlayer = 'O';\r\n            nextPlayerField.textContent = currentPlayer;\r\n        }\r\n    } else {\r\n        playerOMoves.push(+clickedSquare.dataset.id);\r\n        // currentPlayer = 'X';\r\n        winner = isPlayerWon(playerOMoves);\r\n\r\n        if (winner) {\r\n            winnerPlyer.textContent = 'O';\r\n        } else {\r\n            currentPlayer = 'X';\r\n            nextPlayerField.textContent = currentPlayer;\r\n        }\r\n    }\r\n\r\n    let hisObj = {\r\n        x: [...playerXMoves],\r\n        o: [...playerOMoves],\r\n        next: nextPlayerField.textContent,\r\n        winnerP: winnerPlyer.textContent\r\n    };\r\n\r\n    history.push(hisObj);\r\n\r\n    let moveBlock = document.createElement('button');\r\n    let moveText = document.createTextNode(`Go to move #${movesCounter + 1}`)\r\n    moveBlock.classList = 'btn btn-primary d-block mb-2';\r\n    moveBlock.dataset.id = movesCounter + 1;\r\n\r\n    moveBlock.addEventListener('click', (e) => {\r\n        displayHistory(history[e.target.dataset.id - 1]);\r\n    });\r\n\r\n    moveBlock.append(moveText);\r\n    moves.append(moveBlock);\r\n\r\n    moves.append(moveBlock);\r\n\r\n    movesCounter++;\r\n}\r\n\r\nfunction displayHistory(historyObj) {\r\n    nextPlayerField.textContent = historyObj.next;\r\n    winnerPlyer.textContent = historyObj.winnerP;\r\n    squares.forEach(ele => {\r\n        if (historyObj.x.includes(+ele.dataset.id)) {\r\n            ele.textContent = 'X';\r\n        } else if (historyObj.o.includes(+ele.dataset.id)) {\r\n            ele.textContent = 'O';\r\n        } else {\r\n            ele.textContent = '';\r\n        }\r\n    });\r\n}\r\n\r\nsquares.forEach(ele => {\r\n    ele.addEventListener('click', () => {\r\n        CheckWinner(ele);\r\n    });\r\n});\r\n\r\ndocument.getElementById('play-again').addEventListener('click', () => {\r\n    playerXMoves = [];\r\n    playerOMoves = [];\r\n    history = [];\r\n    currentPlayer = 'X';\r\n    movesCounter = 0;\r\n    winner = false;\r\n    squares.forEach(ele => {\r\n        ele.textContent = '';\r\n        ele.classList.remove('text-warning');\r\n    });\r\n    moves.innerHTML = '';\r\n    nextPlayerField.textContent = currentPlayer;\r\n    winnerPlyer.textContent = '...';\r\n});"]}